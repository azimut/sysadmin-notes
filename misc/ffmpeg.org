|              | args             |
|--------------+------------------|
| 60 to 30 fps | -filter:v fps=30 |
| mono         | -ac 1            |
| copy audio   | -acodec copy     |
| remove video | -vn              |
|--------------+------------------|

- tool: web UI
  source https://github.com/antiboredom/ffmpeg-explorer
  ui https://lav.io/notes/ffmpeg-explorer/
  filters map https://raw.githubusercontent.com/antiboredom/ffmpeg-explorer/main/filternames.txt
  discussion https://news.ycombinator.com/item?id=37269425

- snippet: stream to twitch https://corvid.cafe/ffstream.html

- filters https://ffmpeg.org/ffmpeg-filters.html
  - convolution https://igor.technology/interesting-things-you-can-do-with-ffmpeg/
- https://github.com/leandromoreira/ffmpeg-libav-tutorial
- video stabilizer https://gist.github.com/maxogden/43219d6dcb9006042849
- join video with audio
  ffmpeg -i video.mp4 -i audio.mp3 -c copy output.mp4
- concat videos https://stackoverflow.com/questions/7333232/how-to-concatenate-two-mp4-files-using-ffmpeg
  ffmpeg -i opening.mkv -i episode.mkv -i ending.mkv
  -filter_complex "[0:v] [0:a] [1:v] [1:a] [2:v] [2:a] concat=n=3:v=1:a=1 [v] [a]"
  -map "[v]" -map "[a]" output.mkv
- cut slices, naive -copy drops frames
  ffmpeg -ss 00:02:02 \
	-to 00:02:55 \
	-i "${IN}" \
	-y \
	-async 1 feels03.mp4
- get duration in seconds
  ffmpeg -i file.flv 2>&1 | grep "Duration"| cut -d ' ' -f 4 | sed s/,// | sed 's@\..*@@g' | awk '{ split($1, A, ":"); split(A[3], B, "."); print 3600*A[1] + 60*A[2] + B[1] }'
  https://superuser.com/questions/650291/how-to-get-video-duration-in-seconds
- get slice of video
  ffmpeg -ss 00:01:21 -to 00:01:24
- Remove all audio streams / tracks https://stackoverflow.com/questions/38161697/how-to-remove-one-track-from-video-file-using-ffmpeg
  ffmpeg -i input -map 0 -map -0:a -c copy output

- https://stackoverflow.com/questions/5015771/merge-video-and-audio-with-ffmpeg-loop-the-video-while-audio-is-not-over
  - join short video - long audio
    $ ffmpeg  -stream_loop -1 -i input.mp4 -i input.mp3 -shortest -map 0:v:0 -map 1:a:0 -y out.mp4
  - join long audio - short video
    $ ffmpeg  -i input.mp4 -stream_loop -1 -i input.mp3 -shortest -map 0:v:0 -map 1:a:0 -y out.mp4

- instagram https://www.reddit.com/r/davinciresolve/comments/1bab2yp/instagram_uploads_are_always_terrible_any_ideas/
  - example
    - Profile: High
    - 720x720 (720x960????)
    - yuv420p
    - level: 31
    - fps: 30??
  - ffmpeg
    -i "final_export.mov"
    -vf "scale=-2:1920,format=yuv420p"
    -c:v libx264
    -profile:v main
    -level:v 4.0
    -pix_fmt yuv420p
    -movflags +faststart
    -r 30Q
    -c:a aac
    -b:a 192k "instagram_optimized_export.mp4"
