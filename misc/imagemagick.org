- home https://imagemagick.org/
- wiki https://en.wikipedia.org/wiki/ImageMagick
- C source https://github.com/ImageMagick/ImageMagick
- 1987
- John Cristy
- Changelog
  - 2015 7
  - 2009 6.4.9
  - 2003 5.5.7
- GraphicMagick (Fork)
- video 24 Command-line image processing with ImageMagick https://www.youtube.com/watch?v=8n16CuJZJ4c
  - Presenter: Alex Razoumov
  - https://wgpages.netlify.app/imagemagick/
- cli works with *ordered lists*, not single images

- Canvas
- Page = Virtual Canvas + Offset (of where the VC is positioned)
  - +repage resets VC to the actual image itself
  - -repage GEOMETRY
- Geometry: https://www.imagemagick.org/Magick++/Geometry.html
  - WxH+X+Y
  - Wx xH WH
  - > resize if bigger than given dim
  - < resize if smaller than given dim
  - ! resize forced, even on distortion

#+begin_src sh
  $ command { [settings] [operation] }...  "implict_write"
#+end_src

* colors

https://imagemagick.org/script/color.php

#+begin_src bash
  #0f0
  #00ff0
  device-rgb(0,0.5,0)
         rgb(0,255,0)
         rgb(0,100%,0)
  device-gray(0.5)
         gray(127)
         gray(50%)
         gray50
  hsb()
  hsl()
#+end_src

* convert

** text

- https://usage.imagemagick.org/text/#annotate
- https://usage.imagemagick.org/annotating/

- stroke/strokewidth/fill/undercolor

- -draw "text GEOM 'STR'"

- "label:"
  - creates his own canvas
  - follows -gravity, -background, -fill

- "-annotate GEOM STR"
  - draws over the image
  - you can -splice to add space before

** -draw / MVG

- command https://usage.imagemagick.org/draw/
- language: [[https://imagemagick.org/script/magick-vector-graphics.php][Magick Vector Graphics]]
  - has no concept of containers or sets of commands
  - instead i uses the concept of "Graphics Contexts"
- Since version 7, supports fx() inline in the form of:
  #+begin_src sh
    %[fx:w*.9]
  #+end_src

*** settings

- fill
  - fill-opacity
  - fill-rule
- stroke / strokewidth
  - opacity dasharray dash linecap linejoin milterlimit
- font S / pointsize N
- gravity
- origin
- tile
- box

*** methods
**** svg path
https://usage.imagemagick.org/draw/#paths
|---------+------------------------+-----------------------------------|
| COMMAND | ARGS                   | DESCRIPTION                       |
|---------+------------------------+-----------------------------------|
| path    |                        | [[https://www.w3.org/TR/SVG/paths.html#PathDataGeneralInformation][SVG path]] , letters=cmd number=arg |
|         | M 1,2 l 3,4 l 2,-4     | lowercase commands are relative   |
|         | M 1,2 L 4,6 L 6,2      | uppercase are absolute            |
|         | M 1,2   4,6   6,2      | same as above                     |
|         | M 1,2   4,6   6,2  1,2 | closed path                       |
|         | M 1,2   4,6   6,2   Z  | closed path                       |
|---------+------------------------+-----------------------------------|
**** drawing
|----------------+----------------------+----------------------------------------|
| COMMAND        | ARGS                 | DESCRIPTION                            |
|----------------+----------------------+----------------------------------------|
| color          | x,y point            |                                        |
| point          | x,y                  |                                        |
| rectangle      | x,y x,y              |                                        |
| roundrectangle | x,y x,y x,y          |                                        |
| arc            | x,y x,y s,e          | an ellipse, inside the given rectangle |
|----------------+----------------------+----------------------------------------|
| circle         | xc,yc xe,ye [s,e]    | given a center an edge, optional angle |
| ellipse        | xc,yc xe,ye [s,e]    | given a center an edge, optional angle |
|----------------+----------------------+----------------------------------------|
| line           | x,y x,y              |                                        |
| polyline       | x,y x,y [x,y...]     |                                        |
| polygon        | x,y x,y [x,y...]     |                                        |
| bezier         | x,y x,y x,y x,y      | start knot1 knot2 end                  |
|----------------+----------------------+----------------------------------------|
| text           | x,y 'hello'          |                                        |
| image          | over x,y x,y 'f.gif' |                                        |
|----------------+----------------------+----------------------------------------|
**** canvas transform
|-----------+------|
| translate | x,y  |
| rotate    | n    |
| scale     | n,n  |
| skewX     | n    |
| skewY     | n    |
| affine    | n[6] |
|-----------+------|
** -fx operator

- https://imagemagick.org/script/fx.php
- https://im.snibgo.com/fxnew.htm
- https://usage.imagemagick.org/transform/#fx

#+CAPTION: grabs blue channel and returns 0.5 on it
#+begin_src sh
  $ convert -size 64x64 canvas:black -channel blue -fx "1/2" fx_navy.png
#+end_src

#+begin_src sh
  ii=(i-w/2)/w; jj=(j-h/2)/h;
  ii=((i*2)-w)/h; jj=((j*2)-h)/h; # centered [-1,+1]
#+end_src

- image list operator
  - can reference any image in the sequence
  - modifies the first image (u), other images are used for their data
  - image list is later replace with it's output
  - applies a mathematical expression
    - to each pixel
    - on each =channel= (set by -channel)
- no user defined functions
- ; statement (? does not return a value
- conditional: if(COND,S1,S2), COND ? S1 : S2
- iterators: while(COND,S) do(S,COND) for(INIT,COND,S)
- constants: E, Epsilon, Opaque, Phi, Pi, QuantumRange, QuantumScale, Transparent
- pixels:
  - normalized 0-1
  - alpha 0=transparent
  - p[?,?].r relative indexing
  - p{?,?}.r absolute indexing
- misc functions
  - magicktime/0 epoch
  - channel/[0-5]: to set values to different channels
  - debug      erf

*** math functions

https://github.com/ImageMagick/ImageMagick/blob/main/MagickCore/fx.c

|---------+-------+-------+-------+--------+---------|
| cos     | cosh  |       | acos  | acosh  |         |
| sin     | sinh  | sinc  | asin  | asinh  |         |
| tan     | tanh  |       | atan  | atanh  | atan2/2 |
| pow/2   | exp   | ln    | log   | logtwo |         |
| hypot/2 | gauss | sqrt  | gcd/2 | squish |         |
| airy    | jinc  | j1    | j2    | drc/2  |         |
| int     | ceil  | floor | round | trunc  |         |
| max/2   | min/2 | mod/2 |       |        |         |
| abs     |       |       |       |        |         |
|---------+-------+-------+-------+--------+---------|

|--------+----------------------------|
| rand/0 | between 0 and 1            |
| clamp  | between 0 and 1            |
| not    | 1.0 if zero, 0.0 otherwise |
| isnan  | 1.0 if NAN,  0.0 otherwise |
| sign   | 1.0 if pos, -1.0 if neg    |
| alt    | 1.0 if even, -1.0 if odd   |
|--------+----------------------------|

*** symbols
- ALL single character symbols are reserved
- case insensitive
|--------+------------------+----------|
|  <c>   |       <c>        |          |
|   i    |  column offset   |          |
|   j    |    row offset    |          |
|   p    | pixel to use ??? | 2d array |
|   z    |  channel depth   |          |
|  all   |   all channels   |          |
|  this  |   this channel   |          |
|--------+------------------+----------|
**** image attributes
|---------------------+-------------------|
|         <c>         |                   |
|          w          | this image width  |
|          h          | this image height |
|         .p          | image pixels      |
|       .depth        |                   |
|      .kurtosis      |                   |
|       .maxima       |                   |
|        .mean        |                   |
|       .minima       |                   |
|    .resolution.x    |                   |
|    .resolution.y    |                   |
|      .skewness      |                   |
| .standard_deviation |                   |
|---------------------+-------------------|
**** page
|-------------+----------|
|     <c>     |          |
| page.width  |          |
| page.height |          |
|   page.x    | x offset |
|   page.y    | y offset |
|-------------+----------|
**** pixel
|------------+---------|
|    <c>     |         |
|     r      | red     |
|     g      | green   |
|     b      | blue    |
|     a      | alpha   |
|     o      | opacity |
|     c      | cyan    |
|     y      | yellow  |
|     m      | magenta |
|     k      | black   |
| intensity  |         |
|    hue     |         |
| saturation |         |
| lightness  |         |
|    luma    |         |
|------------+---------|
**** image list
|------+------------------------+--------|
| <c>  |          <c>           |        |
|  u   |          fst           | image  |
|  v   |          snd           | image  |
|  s   |        current         | image  |
|  t   | index of current image | number |
|  n   |    number of images    | number |
| u[N] |          Nth           | image  |
| u[t] |        current         |        |
|------+------------------------+--------|
*** vs GLSL

- texture(t,uv)
  - uv: [0,1] range   = uv [0,width] range
    - see [[https://imagemagick.org/script/command-line-options.php#interpolate][-interpolate]] for intermediate (floating point)
    - see [[https://imagemagick.org/script/command-line-options.php#virtual-pixel][-virtual-pixel]] for outside of range behaviour
      - tile by default (or edge?)
- +dot(x,y)+            = x[0]*y[0]+...
- +distance(p0,p1)+     = length(p0 - p1)
- +length(x)+           = hypot(x[0],x[1])
                      = sqrt(x[0]^2 + ... + x[N]^2)
- +step(e,x)+           = x<e ? 0 : 1
- +smoohtstep(e0,e1,x)+ = t=clamp((x-e0)/(e1-e0));
                        t*t*(3-2*t)
- +mix(x,y,a)+          = (x*(1-a))+(y*a)
- +fract(x)+            = x - int(x)

**** m4

#+begin_src sh
  fx() { m4 fx.m4 - <<<"$1"; }
#+end_src

#+begin_src m4
  define(`step', `(($2) < ($1)) ? 0 : 1')dnl
  define(`fract', `($1) - int($1)')dnl
  define(`mix',`(($1)*(1-($3))) + (($2)*($3))')dnl
  define(`smoothstep',`(tt=clamp((($3)-($1))/(($2)-($1)));tt*tt*(3-(2*tt)))')dnl
  define(`length',`hypot($1,$2)')dnl
  define(`distance',`hypot(($1)-($3),($2)-($4))')dnl
  define(`dot',`(($1)*($3) + ($2)*($4))')dnl
#+end_src

**** sh
#+begin_src sh
  step() { echo "((${2}) < (${1})) ? 0.0 : 1.0"; }
  mix() { echo "(${1}*(1-${3}))+(${2}*${3})"; }
  fract() { echo "(${1})-int(${1})"; }
  ss() { echo "tt=clamp(((${3})-${1})/(${2}-${1})); tt*tt*(3-2*tt)"; }
#+end_src

** Settings: values, saved for later use

- Operator: controls how later operators will work.
  - ex: dither gravity fill background bordercolor stroke font pointsize strokewidth box virtual-pixel interpolate
- Input: control image creation or read.
  - ex: label delay dispose page comment size
- Output
  - ex: quality loop compression format path transparent-color
- Control & Debugging
  - ex: verbose debug warnings quiet monitor regard-warnings

** Operators: executed in order, and immediately

https://usage.imagemagick.org/basics/#option_stack

1) Creation: add 1 image
   - file.png xc: canvas: logo:
     rose: gradient: radial-gradient: plasma: tile: pattern: label: caption: text:
   - xc: X Constant image

2) Simple Image Processing:
   - they modify ALL images in memory, separately
   - INPUT: 1 image at the time
   - OUTPUT: 1 or more
   - ex:
     crop repage border frame trim chop draw annotate resize scale sample thumbnail magnify
     adaptative-resize liquid-resize distort morpohology sparse-color
     blur gaussian-blur radial-blur motion-blur adaptative-blur
     convolve shadow sharpen unsharp adaptative-sharpen noise despeckle median negate level level-color
     gamma auto-level auto-gamma sigmoidal-constrast normalize linear-stretch constrast-stretch
     colorize tint modulate contrast equalize sepia-tone  recolor opaque transparent colors map
     ordered-dither random-dither raise  vignette poloroid sketch
     encipher decipher stegano evaluate function alpha colorspace separate region
     edge/r shade/axh charcoal/v emboss/r solarize/t paint/r spread/v posterize/l (artistic filters)
     flip flop transpose transverse rotate roll shear wave swirl implode https://usage.imagemagick.org/warping/

3) Multi-Image List:
   - INPUT: all images in memory
   - OUTPUT: 1 image OR modify each OR delete some (?
   - ex: append mosaic fx  layers coalesce  composite combine flatten clut evaluate-sequence

4) Stack: arrange images order in memory
   - ) delete insert swap reverse duplicate clone (
     - +delete == -delete -1
     - insert: takes top image and inserts it at index
       +insert == -insert 0
     - some take an "index"
       - 0 is the first image
       - -1 is the last (the most recent aka top)
       - may be comma separated
       - may be a range
       - 0--1 to DELETE ALL
   - ()
     - starts a new *image list*
     - where operations on it will act,
     - appending it's result image list to the original one
     - NOT effect on *settings* (unles -respect-parentheses)

5) Misc: geometry version list bench concurrent preview

* mogrify

- inplace batch processing
  - opts: path, format

* snippets
** txt to image
convert -font FreeMono -pointsize 20 label:@what.txt what.gif && sxiv what.gif
convert -interline-spacing -10 -font Nimbus-Mono-PS -fill white -background black -pointsize 20 label:@what.txt what.gif && identify what.gif
convert -list font
** square image
- convert me-aoc7-silver-2.png
  -trim
  -background 'rgb(255,255,255)'
  -virtual-pixel background
  -set option:distort:viewport
  "%[fx:max(w,h)]x%[fx:max(w,h)]-%[fx:max((h-w)/2,0)]-%[fx:max((w-h)/2,0)]"
  -filter point
  -distort SRT 0
  me-aoc7-silver-22.png
** color to trasnparent
- https://stackoverflow.com/questions/9297967/imagick-changing-a-color-to-be-transparent
- convert original.jpg
  -alpha set
  -channel alpha
  -fuzz 18%
  -fill none
  -floodfill +0+0
  black
  transparent-border.png
** watermark
https://www.the-art-of-web.com/system/imagemagick-watermark/
- composite -compose multiply -gravity SouthEast  tt.png me-aoc7-silver-2.png what.jpg
** remove solid color border
https://stackoverflow.com/questions/50847360/imagemagick-remove-black-borders
- can delete the image into a 1x1 easily, keep the fuzz low
  mogrify -fuzz 4% -define trim:percent-background=0% -trim +repage -format jpg img.jpg
- more lenient on fuzz
  mogrify -fuzz 25% -trim +repage -shave 7x7 -format png "${i}"
  mogrify -fuzz 25% -trim +repage -format png "${i}"
** compose 2 image - 1 with transparencey - being of the same size
- composite
  -compose over
  -gravity center
  tranparency-one.png
  background.jpg
  output.png
** frames to timelapse image

https://x.com/climagic/status/1196876628195823616/photo/1

#+begin_src sh
  $ convert -evaluate-sequence Min \
    $( for i in $( seq 34 7 99 ) ; do echo $i.png ; done ) \
    every7th-frame.jpg
#+end_src


#+begin_src sh
  $ convert -evaluate-sequence Min \
    $( printf "%s.png " $( seq 34 7 99 ) ) \
    every7th-frame.jpg
#+end_src
** generate text in background

https://x.com/climagic/status/1314635495280959489

#+begin_src sh
  $ convert -size 1000x600 \
    -define gradient:radii=1000,500 radial-gradient:#884b88-#010101 \
    -font Impact -pointsize 72 -fill white \
    -gravity center \
    -interline-spacing 50 \
    -annotate 0,0 "Now with more arguments!" \
    now-with-more-arguments.png
#+end_src
** color show

#+begin_src sh
  showcolor() { display -size 400x400 xc:"#${1}"; }
#+end_src
