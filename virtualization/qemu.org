- home https://www.qemu.org/
- source (C) https://gitlab.com/qemu-project/qemu
- wiki https://en.wikipedia.org/wiki/QEMU
  - Author: Peter Maydell
- https://en.wikipedia.org/wiki/OVirt
  - Components
    - Ansible
    - PatternFly
    - https://en.wikipedia.org/wiki/Libvirt
    - https://en.wikipedia.org/wiki/Gluster
- https://en.wikipedia.org/wiki/Paravirtualization
- hypervisor https://en.wikipedia.org/wiki/Hypervisor
  - aka (VMM) Virtual Machine Monitor
  - aka supervisor
  - creates and runs virtual machines
  - types
    1) native/bare-metal (KVM?)
    2) hosted (usermode?)
- KVM https://en.wikipedia.org/wiki/Kernel-based_Virtual_Machine
  - Author: Avi Kivity, Paolo Bonzini
  - Kernel-based Virtual Machine
  - Kernel module
  - Allows the Kernel to run as an hypervisor
  - 2.6.20- (2007-)
  - Requires Hardware with "Intel VT" or "AMD-V"
- doc https://www.qemu.org/docs/master/
- doc https://wiki.qemu.org/Category:User_documentation

- A patch to hide qemu itself https://github.com/zhaodice/qemu-anti-detection

- CTRL+ALT

- tool to emulate firmware https://github.com/firmadyne/firmadyne

* qemu-advent-calendar
- https://qemu-advent-calendar.org/2023/
  1) http://tinycorelinux.net/
     - in memory
     - for old systems?
     - 36MB usage of ram
  2) ASM - bootable .pdf
     - https://github.com/pablojimenezmateo/curriculum-bootloader
     - https://github.com/eldondev/pdf-bootloader/
  3) ASM - wordle game
     https://github.com/icebreaker/flordle/
  4) ASM - programming language
     https://github.com/akkartik/mu
* cmd

** qemu-ARCH[el]

- aka usermode
- el - for little endian

|----+----------+-------------------------|
| -L | <ROOTFS> |                         |
| -g | -        | wait for gdb connection |
|----+----------+-------------------------|
** qemu-ARCH-static

#+begin_src sh
  $ ls
    bin lib etc root var usr
  $ cp /usr/bin/qemu-mips-static .
  $ sudo chroot . ./qemu-mips-static bin/busybox
#+end_src

** qemu-system-ARCH

- we are going to need a different *kernel*
  - with QEMU drivers (eg: UART)
  - a kernel _device tree_ could help him adapt generic drivers to the actual hardware running
  - some embedded kernels might be a on special _format_ for bootloaders (?

- we might need a different rootfs
  - with more debug tools
  - keeping the libc version, to reuse custom binaries

#+begin_src sh
  QEMU_AUDIO_DRIVER=none
#+end_src

|------------+----------------------+----------------------------|
| -display   | [sdl]                |                            |
| -cpu       | help                 |                            |
| -M         |                      | board name                 |
| -m         |                      | memory size                |
| -nographic |                      | for terminal IO            |
| -hda       | FILE                 | a filesystem file          |
| -net       | nic,model=e1000      |                            |
|            | user,                | to run unprivileged        |
|            | hostfwd=tcp::HP-:GP, | host/guest port forwarding |
| -kernel    | FILE                 |                            |
| -no-reboot | -                    | shutdown on reboot         |
| -append    | ???                  | append to kernel cmdline   |
| -drive     | file=[ISO]           |                            |
|            | format=raw           |                            |
|            | if=ide               |                            |
|------------+----------------------+----------------------------|
