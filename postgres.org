- article 2023 https://www.avestura.dev/blog/explaining-the-postgres-meme
- https://philbooth.me/blog/nine-ways-to-shoot-yourself-in-the-foot-with-postgresql
- triggers https://ctodive.com/hooks-the-secret-feature-powering-the-postgres-ecosystem-f05b3b82e0ba
- Scheme migrations with views https://fabianlindfors.se/blog/schema-migrations-in-postgres/
* list extensions/plugins (\dx)
on supabase
#+begin_src
 ~> \dx
                                            List of installed extensions
        Name        │ Version │   Schema   │                              Description
════════════════════╪═════════╪════════════╪════════════════════════════════════════════════════════════════════════
 pg_graphql         │ 1.2.3   │ graphql    │ pg_graphql: GraphQL support
 pg_stat_statements │ 1.10    │ extensions │ track planning and execution statistics of all SQL statements executed
 pgcrypto           │ 1.3     │ extensions │ cryptographic functions
 pgjwt              │ 0.2.0   │ extensions │ JSON Web Token API for Postgresql
 pgsodium           │ 3.1.7   │ pgsodium   │ Pgsodium is a modern cryptography library for Postgres.
 plpgsql            │ 1.0     │ pg_catalog │ PL/pgSQL procedural language
 supabase_vault     │ 0.2.8   │ vault      │ Supabase Vault Extension
 uuid-ossp          │ 1.1     │ extensions │ generate universally unique identifiers (UUIDs)
(8 rows)
#+end_src
* list sequences
https://soft-builder.com/how-to-list-sequences-in-postgresql-database/
#+begin_src sql
# select sequence_schema, sequence_name from information_schema.sequences order by sequence_name;
 sequence_schema │   sequence_name
═════════════════╪════════════════════
 public          │ dns_data_id_seq
 public          │ dns_error_id_seq
 public          │ domains_id_seq
 public          │ nameservers_id_seq
#+end_src
* add COLUMN into table
https://www.commandprompt.com/education/how-to-add-columns-to-a-table-in-postgresql/
#+begin_src sql
  ALTER TABLE nameservers ADD COLUMN is_alive boolean DEFAULT true;
  ALTER TABLE nameservers DROP COLUMN is_alive;

  ALTER TABLE nameservers ADD COLUMN timeouts integer DEFAULT 0;
  ALTER TABLE nameservers ADD COLUMN enabled boolean DEFAULT true;
#+end_src
* non default port, Selinux
- Listen on non default port (5433)
#+begin_src
[root@localhost audit]# grep postmaster audit.log
type=AVC msg=audit(1611139642.653:23799): avc:  denied  { name_bind } for  pid=1061793 comm="postmaster" src=5433 scontext=system_u:system_r:postgresql_t:s0 tcontext=system_u:object_r:unreserved_port_t:s0 tclass=tcp_socket permissive=0
type=AVC msg=audit(1611139642.653:23800): avc:  denied  { name_bind } for  pid=1061793 comm="postmaster" src=5433 scontext=system_u:system_r:postgresql_t:s0 tcontext=system_u:object_r:unreserved_port_t:s0 tclass=tcp_socket permissive=0
#+end_src
audit2allow -M mypol -i /var/log/audit/audit.log
semodule -i mypol.pp

* Separate Instance, Fedora
  Default Port: 5432

  sudo postgresql-new-systemd-unit
  --unit=postgresql@chatlogs
  --datadir=/var/lib/pgsql/chatlogs

  sudo postgresql-setup
  --port 5432
  --unit=postgresql@recon
  --initdb
* new user
  https://ubiq.co/database-blog/create-user-postgresql/
#+begin_src sql
CREATE USER user_name WITH ENCRYPTED PASSWORD 'mypassword';
GRANT ALL PRIVILEGES ON DATABASE sample_db TO user_name;
GRANT INSERT,SELECT ON some_table TO user_name;
#+end_src
