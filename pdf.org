* pdf to image

https://stackoverflow.com/questions/6605006/convert-pdf-to-image-with-high-resolution

$ convert -verbose -density 110 -trim sqmail_Big_Picture2.pdf -quality 100 -flatten -sharpen 0x1.0 sqmail_Big_Picture2.jpg

* xvfb

https://bugzilla.mozilla.org/show_bug.cgi?id=1407238

PROFILEDIR=$(mktemp -p ~/tmp -d tmp-fx-profile.XXXXXX.d)
timeout 60 xvfb-run firefox --profile $PROFILEDIR ... (other params)
rm -rf $PROFILEDIR

mkdir /tmp/firefox_tmp_home
export HOME=firefox_tmp_home
timeout 60 xvfb-run -a -s -screen 0 1280x1024x24 flock -w 50 /tmp/firefox_tmp_home firefox --headless --no-remote --window-size 1448,1024
--screenshot PDF_NAME THE_URL

* puppettear

- https://github.com/puppeteer/puppeteer

Installed resume-cli using npm install -g resume-cli
Installed puppeteer by using PUPPETEER_PRODUCT=firefox npm install puppeteer

** puppetear

#+begin_src javascript
const puppeteer = require("puppeteer");
const path = require("path");
const fs = require("fs");
const filePath = path.resolve(__dirname, "index.html");

(async () => {
  try {
    const puppeteerVersion = require('puppeteer/package.json').version;
    console.log(`Using Puppeteer version ${puppeteerVersion}`);
    console.log(`This is the path: ${filePath}`)

    const browser = await puppeteer.launch({
      product: 'firefox',
      headless: true, // Use true to run headless, not 'new'
      dumpio: false // Error logging
    });
    const page = await browser.newPage();
    var contentHtml = fs.readFileSync(`${filePath}`, 'utf8');
    await page.setContent(contentHtml);
    // await page.goto(`file:${filePath}`);
    await page.pdf({
      path: "output.pdf",
      format: "A4",
      displayHeaderFooter: false,
      margin: { top: 0, right: 0, bottom: 0, left: 0 },
      // preferCSSPageSize: true,
      // printBackground: false, // Change to true if you want to include background
    });
    await browser.close();
    console.log("✅ PDF built");
  } catch (error) {
    console.error("❌ Error building PDF:", error);
    process.exit(1);
  }
})();
#+end_src

* URL to image
firefox --screenshot page.png --window-size=1500 https://mysite.com/page.html
convert page.png -crop 1500x1766 page.tiff
convert page.tiff page.pdf
* URL to pdf
https://bugzilla.mozilla.org/show_bug.cgi?id=1407238
(incognito makes it faster?)
chrome --incognito --headless --disable-gpu --print-to-pdf https://bugzilla.mozilla.org
** firefox (selenium/helium)

- problems:
  - wrong formatting with multi-column
  - cannot remove margins :(
  - fails completely on some files???

# Scale: fit to page width
# Margins: none / -default-
# Format: original / -simplified-
# Options: "print backgrounds" "print headers and footers"
#
# https://www.deskriders.dev/posts/1640791840-selenium-firefox-and-saving-webpage-as-pdf/
# https://searchfox.org/mozilla-central/source/modules/libpref/init/all.js
# https://searchfox.org/mozilla-central/source/widget/nsPrintSettingsService.cpp

#+begin_src
#!/usr/bin/env python3
"""INCOMPLETE Convert url to pdf."""

from time import sleep

from helium import start_firefox
from selenium.webdriver import FirefoxOptions

#URL = "https://www.deskriders.dev/posts/1639863087-python-selenium/"
#URL = "file:///home/sendai/Downloads/Educative - Grokking the Coding Interview Patterns for Coding Questions 2022-7/01. Introduction/2 Course Overview - Grokking the Coding Interview_ Patterns for Coding Questions.html"
URL = "file:///home/sendai/Downloads/Educative - Grokking Modern System Design Interview for Engineers & Managers 2022-10/08. Load Balancers/1. Introduction to Load Balancers.html"

options = FirefoxOptions()

options.add_argument("--start-maximized")

options.set_preference("print.always_print_silent", True)
options.set_preference("print.save_as_pdf.links.enabled", True)

options.set_preference("print_printer", "Mozilla Save to PDF")
options.set_preference("print.printer_Mozilla_Save_to_PDF.print_to_file", True)
options.set_preference("print.printer_Mozilla_Save_to_PDF.print_to_filename", "/home/sendai/html2pdf.pdf")

options.set_preference("print.print_headercenter", "")
options.set_preference("print.print_headerleft", "")
options.set_preference("print.print_headerright", "")
options.set_preference("print.print_footercenter", "")
options.set_preference("print.print_footerleft", "")
options.set_preference("print.print_footerright", "")

options.set_preference("print.print_bgcolor", False)
options.set_preference("print.print_bgimages", False)

driver = start_firefox(URL, options=options)

driver.execute_script("window.print();")
sleep(2)  # Found that a little wait is needed for the print to be rendered otherwise the file will be corrupted

driver.quit()
#+end_src

* evince keep zoom
  https://askubuntu.com/questions/213820/how-to-keep-zoomlevel-in-evince-constant-after-clicking-a-link
  > gsettings set org.gnome.Evince allow-links-change-zoom false
* markdown    to pdf
pandoc --pdf-engine=xelatex -V pagestyle=empty -V margin-left=10mm -V margin-right=10mm -V margin-top=10mm -V margin-bottom=10mm -V papersize=letter -V fontsize=12pt "${md}" -o pdf/"${md%.*}".pdf
** Example
#+begin_src bash
#!/bin/bash
set -exuo pipefail

mkdir -p pdf

for md in p*.md; do
	title="$(head -n1 "${md}" |
		sed 's/# Programming for Wa[n]*ab[e]*s[.]* //')"
	[[ -f pdf/"${title}".pdf ]] && continue
	pandoc --pdf-engine=xelatex \
		-V pagestyle=empty \
		-V margin-left=10mm \
		-V margin-right=10mm \
		-V margin-top=10mm \
		-V margin-bottom=10mm \
		-V papersize=letter \
		-V fontsize=12pt \
		"${md}" -o pdf/"${title}".pdf
done
#+end_src
* html(plain) to pdf
pandoc input.html -t latex -o output.pdf
-t html
* ppt         to pdf
- https://askubuntu.com/questions/11130/how-can-i-convert-a-ppt-to-a-pdf-from-the-command-line
  unoconv -f pdf file.ppt
* djvu        to pdf
https://wiki.archlinux.org/index.php/PDF,_PS_and_DjVu#DjVu_tools
- ddjvu --format=pdf some.djvu some.pdf
* epub        to pdf
ebook-convert input.epub output.pdf
* rotate
https://stackoverflow.com/questions/3136610/pdftk-rotating-pages-problem
- pdftk in.pdf cat
  pdftk not in fedora repo
https://unix.stackexchange.com/questions/394065/command-line-how-do-you-rotate-a-pdf-file-90-degrees
- convert -rotate 270 -density 200 in.pdf out.pdf
  ... convert is sloooooooow and lowres
- qpdf in.pdf out.pdf --rotate=270
* crop
https://askubuntu.com/questions/124692/command-line-tool-to-crop-pdf-files
"it looks as if pdfcrop only modifies the bounding boxes. It doesn't remove data"
BUG: It also seems that converts widescreen pages to normal pages...
- dnf install texlive-pdfcrop texlive-pdftex
  pdfcrop --margins "<left> <top> <right> <bottom>" in.pdf out.pdf
* grayscale
https://unix.stackexchange.com/questions/93959/how-to-convert-a-color-pdf-to-black-white
gs -sOutputFile=output.pdf \
   -q -dNOPAUSE -dBATCH -dSAFER \
   -sDEVICE=pdfwrite \
   -dCompatibilityLevel=1.3 \
   -dPDFSETTINGS=/screen \
   -dEmbedAllFonts=true \
   -dSubsetFonts=true \
   -sColorConversionStrategy=/Mono \
   -sColorConversionStrategyForImages=/Mono \
   -sProcessColorModel=/DeviceGray \
   $1
https://unix.stackexchange.com/questions/327697/convert-pdf-font-colors-to-monochrome-black
./gs907 -sDEVICE=psmono -o out.ps -f in.pdf
Note: the PSMono device will flatten your file and make the content text not selectable.
> convert -monochrome in.pdf out.pdf # eats memory/CPU
* merge/concat with Index
https://unix.stackexchange.com/questions/368415/merge-pdf-files-and-automatically-create-a-table-of-contents-with-each-file-as-a
#+begin_src bash
#!/bin/bash
set -exuo pipefail
tp="tmp.pdf"
td="data"
for i in *.pdf; do
    echo "Bookmarking $i"
    printf "BookmarkBegin\nBookmarkTitle: %s\nBookmarkLevel: 1\nBookmarkPageNumber: 1\n" "${i%.*}"> "$td"
    pdftk "$i" update_info "$td" output "$tp"
    mv "$tp" "$i"
done
pdftk *.pdf cat output myBook.pdf
#+end_src
* remove last page
https://stackoverflow.com/questions/17705974/remove-the-last-page-of-a-pdf-file-using-pdftk
pdftk infile.pdf cat 1-r2 output outfile.pdf
* extract pages
https://linuxhint.com/extract-pdf-pages-linux/
pdftk adv_bash_scripting.pdf cat 3-8 output output.pdf
53-103
1032-1171
1624-1933
2332-2418
2506-2539
2965-3212
3500-3538
3755-3817
4185
* lower resolution / reduce size
https://www.digitalocean.com/community/tutorials/reduce-pdf-file-size-in-linux
gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/default -dNOPAUSE -dQUIET -dBATCH -sOutputFile=sig22_GRIS-lowres.pdf sig22_GRIS.pdf
| Option                  | Description                                                                     |
|-------------------------+---------------------------------------------------------------------------------|
| -dPDFSETTINGS=/screen   | Has a lower quality and smaller size. (72 dpi)                                  |
| -dPDFSETTINGS=/ebook    | Has a better quality, but has a slightly larger size (150 dpi)                  |
| -dPDFSETTINGS=/prepress | Output is of a higher size and quality (300 dpi)                                |
| -dPDFSETTINGS=/printer  | Output is of a printer type quality (300 dpi)                                   |
| -dPDFSETTINGS=/default  | Selects the output which is useful for multiple purposes. Can cause large PDFS. |
